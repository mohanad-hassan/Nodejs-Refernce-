//dont store passowrds as strings in database , store them after hashing , we can use a library like , bcryptjs .
// to short cut the code their is mongoose mdilewares , example : schema.pre("save",async function (next) {
this.schemaProperty 
next() //because its express modleware
} .
// userSchema.pre("save", async function (next) {
     const salt = await bcrypt.genSalt(10)
  this.password =await bcrypt.hash(this.password,salt)
    next()
// it takes the data after await Schems.cretate .
//in Schema always use function keyword to be able to use this keyword , if you use arrow function this will be useless.
//by Schema.methods.anyname  = function () {return this.name }
now to get name you can use Schema.anyname().
//this schema functions it just for organize your code and make it better .
// in postman  you can save any thing from  a restApi route to postman variable , go to TEST , and you can do it over there 
 // const jsonData = pm.response.json()
const Token = jsonData.token
pm.globals.set("accesToken", Token);

 // in mongo db every error has a unique code .
 // in js  Object.keys(object) to return array contains all the keys of that object .
 //cors cross origin  resource sharing , if you dont install cors library , you cant acces to your RESTAPI from any where except the public folder 
 you set in your project .
 //xss clean library to protect from attacks cleans the request after send it  .
 //express rate limit to prevent user from send a lot of requests .
 //helmet library to set a lot of headres to prevent hacking .
 // in post man you can expoort a collection as a json file wich contains all your commands , but first you have to reformat the data , we will 
 use APIMATIC webSite to do that .
 //their is swagger ui  its like postman but online , he exported json file from postman , then we go to APiMatic and inserted it (exported with yaml version 
 3) , and give 
 the url that we deployed our site on it , then take the result to Swagger Ui Editor , 


